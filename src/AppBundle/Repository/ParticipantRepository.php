<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Community;
use AppBundle\Entity\Participant;
use AppBundle\Entity\Player;
use AppBundle\Legacy\Model\Exception\NotFoundException;
use Doctrine\ORM\EntityRepository;

/**
 * ParticipantRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ParticipantRepository extends EntityRepository
{
    /**
     * List community's players.
     * @param Community $community
     * @param \DateTime|null $date
     * @return Player[]
     */
    public function findPlayersFromCommunity(Community $community, \DateTime $date = null): array
    {
        
    }

    /**
     * List player's communities.
     *
     * Return player's communities. If a date is passed, return only communities in which the player has joined
     * after that date.
     *
     * @param Player $player
     * @param \DateTime|null $date
     * @return Community[]
     */
    public function findCommunitiesFromPlayer(Player $player, \DateTime $date = null): array
    {
        
    }

    /**
     * Find participation from player in community.
     * @param Player $player
     * @param Community $community
     * @return mixed
     * @throws NotFoundException
     */
    public function findByPlayerAndCommunity(
        Player $player,
        Community $community
    ): Participant
    {
        
    }

    /**
     * Check if player is already a participant of the community.
     * @param Player $player
     * @param Community $community
     * @return bool
     */
    public function checkIfPlayerIsAlreadyFromCommunity(
        Player $player,
        Community $community
    ): bool
    {
        
    }

    /**
     * Return number of players from community.
     * @param Community $community
     * @return int
     */
    public function countPlayersFromCommunity(Community $community): int
    {
        
    }

    /**
     * Return number of communities in which player participate.
     * @param Player $player
     * @return int
     */
    public function countCommunitiesFromPlayer(Player $player): int
    {
        
    }
}
